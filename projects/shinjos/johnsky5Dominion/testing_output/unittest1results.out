================================= UNIT TEST 1 ==================================
target function: int buyCard(int supplyPos, struct gameState *state)
---------------------------------- Scenario A ----------------------------------
Return Value: CORRECT
Game State Comparison:
numPlayers:      CORRECT 
supplyCount:     CORRECT 
embargoTokens:   CORRECT 
outpostPlayed:   CORRECT 
outpostTurn:     CORRECT 
whoseTurn:       CORRECT 
phase:           CORRECT 
numActions:      CORRECT 
coins:           CORRECT 
numBuys:         CORRECT 
hand:            CORRECT 
handCount:       CORRECT 
deck:            CORRECT 
deckCount:       CORRECT 
discard:         CORRECT 
discardCount:    CORRECT 
playedCards:     CORRECT 
playedCardCount: CORRECT 
--------------------------------------------------------------------------------
---------------------------------- Scenario B ----------------------------------
Return Value: CORRECT
Game State Comparison:
numPlayers:      CORRECT expected(2) = resulting(2)
supplyCount:     WRONG   
                 [0] -> expected(9) < resulting(10)
                 [1] -> expected(0) = resulting(0)
                 [2] -> expected(0) = resulting(0)
                 [3] -> expected(0) = resulting(0)
                 [4] -> expected(0) = resulting(0)
                 [5] -> expected(0) = resulting(0)
                 [6] -> expected(29) = resulting(29)
embargoTokens:   CORRECT 
                 [0] -> expected(0) = resulting(0)
                 [1] -> expected(0) = resulting(0)
                 [2] -> expected(0) = resulting(0)
                 [3] -> expected(0) = resulting(0)
                 [4] -> expected(0) = resulting(0)
                 [5] -> expected(0) = resulting(0)
                 [6] -> expected(1) = resulting(1)
outpostPlayed:   CORRECT expected(0) = resulting(0)
outpostTurn:     CORRECT expected(0) = resulting(0)
whoseTurn:       CORRECT expected(1) = resulting(1)
phase:           CORRECT expected(1) = resulting(1)
numActions:      CORRECT expected(0) = resulting(0)
coins:           CORRECT expected(0) = resulting(0)
numBuys:         CORRECT expected(0) = resulting(0)
hand:            CORRECT 
                 [0][0] -> expected(0) = resulting(0)
                 [0][1] -> expected(0) = resulting(0)
                 [0][2] -> expected(0) = resulting(0)
                 [0][3] -> expected(0) = resulting(0)
                 [0][4] -> expected(0) = resulting(0)
                 [0][5] -> expected(0) = resulting(0)
                 [0][6] -> expected(0) = resulting(0)
                 [1][0] -> expected(0) = resulting(0)
                 [1][1] -> expected(0) = resulting(0)
                 [1][2] -> expected(0) = resulting(0)
                 [1][3] -> expected(0) = resulting(0)
                 [1][4] -> expected(0) = resulting(0)
                 [1][5] -> expected(0) = resulting(0)
                 [1][6] -> expected(0) = resulting(0)
                 [2][0] -> expected(0) = resulting(0)
                 [2][1] -> expected(0) = resulting(0)
                 [2][2] -> expected(0) = resulting(0)
                 [2][3] -> expected(0) = resulting(0)
                 [2][4] -> expected(0) = resulting(0)
                 [2][5] -> expected(0) = resulting(0)
                 [2][6] -> expected(0) = resulting(0)
                 [3][0] -> expected(0) = resulting(0)
                 [3][1] -> expected(0) = resulting(0)
                 [3][2] -> expected(0) = resulting(0)
                 [3][3] -> expected(0) = resulting(0)
                 [3][4] -> expected(0) = resulting(0)
                 [3][5] -> expected(0) = resulting(0)
                 [3][6] -> expected(0) = resulting(0)
handCount:       CORRECT 
                 [0] -> expected(0) = resulting(0)
                 [1] -> expected(0) = resulting(0)
                 [2] -> expected(0) = resulting(0)
                 [3] -> expected(0) = resulting(0)
deck:            CORRECT 
                 [0][0] -> expected(0) = resulting(0)
                 [0][1] -> expected(0) = resulting(0)
                 [0][2] -> expected(0) = resulting(0)
                 [0][3] -> expected(0) = resulting(0)
                 [0][4] -> expected(0) = resulting(0)
                 [0][5] -> expected(0) = resulting(0)
                 [0][6] -> expected(0) = resulting(0)
                 [1][0] -> expected(0) = resulting(0)
                 [1][1] -> expected(0) = resulting(0)
                 [1][2] -> expected(0) = resulting(0)
                 [1][3] -> expected(0) = resulting(0)
                 [1][4] -> expected(0) = resulting(0)
                 [1][5] -> expected(0) = resulting(0)
                 [1][6] -> expected(0) = resulting(0)
                 [2][0] -> expected(0) = resulting(0)
                 [2][1] -> expected(0) = resulting(0)
                 [2][2] -> expected(0) = resulting(0)
                 [2][3] -> expected(0) = resulting(0)
                 [2][4] -> expected(0) = resulting(0)
                 [2][5] -> expected(0) = resulting(0)
                 [2][6] -> expected(0) = resulting(0)
                 [3][0] -> expected(0) = resulting(0)
                 [3][1] -> expected(0) = resulting(0)
                 [3][2] -> expected(0) = resulting(0)
                 [3][3] -> expected(0) = resulting(0)
                 [3][4] -> expected(0) = resulting(0)
                 [3][5] -> expected(0) = resulting(0)
                 [3][6] -> expected(0) = resulting(0)
deckCount:       CORRECT 
                 [0] -> expected(0) = resulting(0)
                 [1] -> expected(0) = resulting(0)
                 [2] -> expected(0) = resulting(0)
                 [3] -> expected(0) = resulting(0)
discard:         CORRECT 
                 [0][0] -> expected(0) = resulting(0)
                 [0][1] -> expected(0) = resulting(0)
                 [0][2] -> expected(0) = resulting(0)
                 [0][3] -> expected(0) = resulting(0)
                 [0][4] -> expected(0) = resulting(0)
                 [0][5] -> expected(0) = resulting(0)
                 [0][6] -> expected(0) = resulting(0)
                 [1][0] -> expected(6) = resulting(6)
                 [1][1] -> expected(0) = resulting(0)
                 [1][2] -> expected(0) = resulting(0)
                 [1][3] -> expected(0) = resulting(0)
                 [1][4] -> expected(0) = resulting(0)
                 [1][5] -> expected(0) = resulting(0)
                 [1][6] -> expected(0) = resulting(0)
                 [2][0] -> expected(0) = resulting(0)
                 [2][1] -> expected(0) = resulting(0)
                 [2][2] -> expected(0) = resulting(0)
                 [2][3] -> expected(0) = resulting(0)
                 [2][4] -> expected(0) = resulting(0)
                 [2][5] -> expected(0) = resulting(0)
                 [2][6] -> expected(0) = resulting(0)
                 [3][0] -> expected(0) = resulting(0)
                 [3][1] -> expected(0) = resulting(0)
                 [3][2] -> expected(0) = resulting(0)
                 [3][3] -> expected(0) = resulting(0)
                 [3][4] -> expected(0) = resulting(0)
                 [3][5] -> expected(0) = resulting(0)
                 [3][6] -> expected(0) = resulting(0)
discardCount:    WRONG   
                 [0] -> expected(0) = resulting(0)
                 [1] -> expected(2) > resulting(1)
                 [2] -> expected(0) = resulting(0)
                 [3] -> expected(0) = resulting(0)
playedCards:     CORRECT 
                 [0] -> expected(0) = resulting(0)
                 [1] -> expected(0) = resulting(0)
                 [2] -> expected(0) = resulting(0)
                 [3] -> expected(0) = resulting(0)
                 [4] -> expected(0) = resulting(0)
                 [5] -> expected(0) = resulting(0)
                 [6] -> expected(0) = resulting(0)
playedCardCount: CORRECT expected(0) = resulting(0)
--------------------------------------------------------------------------------
================================================================================


unittest1 runtime:
real	0m0.006s
user	0m0.001s
sys	0m0.003s


unittest1 coverage info:Function 'compare'
Lines executed:0.00% of 6
Branches executed:0.00% of 4
Taken at least once:0.00% of 4
No calls

Function 'newGame'
Lines executed:0.00% of 2
No branches
No calls

Function 'kingdomCards'
Lines executed:0.00% of 12
No branches
No calls

Function 'initializeGame'
Lines executed:0.00% of 78
Branches executed:0.00% of 46
Taken at least once:0.00% of 46
No calls

Function 'shuffle'
Lines executed:0.00% of 18
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
No calls

Function 'buyCard'
Lines executed:76.92% of 13
Branches executed:100.00% of 6
Taken at least once:50.00% of 6
No calls

Function 'numHandCards'
Lines executed:0.00% of 1
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 2
No branches
No calls

Function 'supplyCount'
Lines executed:100.00% of 1
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 11
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'whoseTurn'
Lines executed:0.00% of 1
No branches
No calls

Function 'endTurn'
Lines executed:0.00% of 22
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'isGameOver'
Lines executed:0.00% of 12
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'scoreFor'
Lines executed:0.00% of 26
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
No calls

Function 'getWinners'
Lines executed:0.00% of 33
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
No calls

Function 'drawCard'
Lines executed:0.00% of 24
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'getCost'
Lines executed:10.00% of 30
Branches executed:100.00% of 28
Taken at least once:3.57% of 28
No calls

Function 'smithyEffect'
Lines executed:0.00% of 5
Branches executed:0.00% of 2
Taken at least once:0.00% of 2
No calls

Function 'adventurerEffect'
Lines executed:0.00% of 16
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'councilRoomEffect'
Lines executed:0.00% of 12
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'villageEffect'
Lines executed:0.00% of 6
Branches executed:0.00% of 2
Taken at least once:0.00% of 2
No calls

Function 'greatHallEffect'
Lines executed:0.00% of 4
No branches
No calls

Function 'cardEffect'
Lines executed:0.00% of 259
Branches executed:0.00% of 179
Taken at least once:0.00% of 179
No calls

Function 'discardCard'
Lines executed:0.00% of 15
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'gainCard'
Lines executed:53.33% of 15
Branches executed:100.00% of 6
Taken at least once:50.00% of 6
No calls

Function 'updateCoins'
Lines executed:0.00% of 14
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

File 'dominion.c'
Lines executed:3.37% of 652
Branches executed:9.55% of 419
Taken at least once:1.67% of 419
No calls
dominion.c:creating 'dominion.c.gcov'



